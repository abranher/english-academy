0001	Banco Central de Venezuela
0102	Banco de Venezuela S.A.C.A. Banco Universal	
0104	Venezolano de Crédito, S.A. Banco Universal	
0105	Mercantil Banco, C.A. Banco Universal	
0108	BBVA Provincial, S.A. Banco Universal	
0114	Bancaribe C.A. Banco Universal	
0115	Banco Exterior C.A. Banco Universal	
0128	Banco Caroní C.A. Banco Universal	
0134	Banesco, Banco Universal S.A.C.A.	
0137	Banco Sofitasa, Banco Universal	
0138	Banco Plaza, Banco Universal	
0146	Bangente C.A	
0151	BFC Banco Fondo Común C.A. Banco Universal	
0156	100% Banco, Banco Universal C.A.	
0157	DelSur Banco Universal C.A.	
0163	Banco del Tesoro, C.A. Banco Universal	
0166	Banco Agrícola de Venezuela, C.A. Banco Universal	
0168	Bancrecer, S.A. Banco Microfinanciero	
0169	R4, Banco Microfinanciero C.A.	
0171	Banco Activo, Banco Universal	
0172	Bancamiga, Banco Universal C.A.	
0173	Banco Internacional de Desarrollo, C.A. Banco Universal	
0174	Banplus Banco Universal, C.A	
0007	Banco Digital de Los Trabajadores	
0177	Banco de la Fuerza Armada Nacional Bolivariana, B.U.	
0178	N58 Banco Digital, S.A.	
0191	Banco Nacional de Crédito, C.A. Banco Universal	
0601	Instituto Municipal de Crédito Popular	

model EnrollmentOrder {
  id               String                @id @default(uuid())
  status           EnrollmentOrderStatus @default(UNVERIFIED)
  total            Float
  paymentMethod    PaymentMethod         @default(MOBILE_PAYMENT)
  paymentReference Int

  studentId String
  student   Student @relation(fields: [studentId], references: [id])

  courseId String
  course   Course @relation(fields: [courseId], references: [id])

  enrollment Enrollment?

  enrollmentOrderHistory EnrollmentOrderHistory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([studentId])
}

model Enrollment {
  id             String  @id @default(uuid())
  isActive       Boolean @default(false)
  purchasedPrice Float

  studentId String
  student   Student @relation(fields: [studentId], references: [id])

  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  enrollmentOrderId String          @unique
  enrollmentOrder   EnrollmentOrder @relation(fields: [enrollmentOrderId], references: [id])

  enrolledAt DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([studentId, courseId])
  @@index([courseId])
  @@index([enrolledAt])
  @@index([studentId, isActive])
}

model EnrollmentOrderHistory {
  id             String                          @id @default(uuid())
  comment        String
  previousStatus EnrollmentOrderStatus
  decision       EnrollmentOrderStatusDecision
  resubmittedAt  DateTime?

  enrollmentOrderId String
  enrollmentOrder   EnrollmentOrder @relation(fields: [enrollmentOrderId], references: [id])

  createdAt DateTime @default(now())
}

enum EnrollmentOrderStatusDecision {
  APPROVED
  NEEDS_CHANGES
  REJECTED
}
